services:

  db:
    container_name: pa_db
    image: postgres:14.3-alpine3.15
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: pa_redis
    image: redis:7
    ports:
      - "6379:6379"

  celery:
    container_name: pa_celery
    build: .
    command: celery -A backend worker --loglevel=info
    volumes:
      - .:/app/
    depends_on:
      - db
      - redis
    environment:
      - "DJANGO_SETTINGS_MODULE=backend.settings"
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/0"

  web:
    container_name: pa_web
    build:
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

    env_file: .env

volumes:
  db_data: